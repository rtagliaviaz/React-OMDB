{"version":3,"sources":["components/MovieModal.js","components/Main.js","App.js","index.js"],"names":["MovieModal","movieInfo","handleClose","console","log","className","src","Poster","alt","Actors","Genre","Director","Released","Plot","onClick","api","apiKey","Main","useState","name","setName","list","setList","movieDetails","setMovieDetails","selID","setSelID","show","setShow","results","setResults","pagesNum","setPagesNum","actualPag","setActualPag","getInfo","page","axios","get","then","res","data","Search","totalResults","details","e","id","preventDefault","useEffect","pages","parseInt","getPages","i","push","key","goTo","window","scrollTo","htmlFor","type","placeholder","onChange","target","value","handleSubmit","map","movie","imdbID","Title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA2BeA,EAzBI,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAE9B,OADAC,QAAQC,IAAI,OAAQH,GAElB,yBAAKI,UAAU,uBACH,6BAASA,UAAU,cAEjB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKC,IAAKL,EAAUM,OAAQC,IAAI,YAElC,yBAAKH,UAAU,cACb,2BAAG,sCAAH,IAAmBJ,EAAUQ,QAC7B,2BAAG,qCAAH,IAAkBR,EAAUS,OAC5B,2BAAG,wCAAH,IAAqBT,EAAUU,UAC/B,2BAAG,wCAAH,IAAqBV,EAAUW,UAC/B,2BAAG,oCAAH,IAAiBX,EAAUY,QAI/B,4BAAQR,UAAU,iBAAiBS,QAASZ,GAA5C,YCdZa,EAAM,2BAENC,EAAS,kBAmKAC,EAjKF,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEOF,mBAAS,IAFhB,mBAEVG,EAFU,KAEJC,EAFI,OAGuBJ,qBAHvB,mBAGVK,EAHU,KAGIC,EAHJ,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,OAMOR,oBAAS,GANhB,mBAMVS,EANU,KAMJC,EANI,OASaV,qBATb,mBASVW,EATU,KASDC,EATC,OAUeZ,qBAVf,mBAUVa,EAVU,KAUAC,EAVA,OAWOd,qBAXP,gCAYaA,mBAAS,KAZtB,gCAaiBA,sBAbjB,mBAaVe,EAbU,KAaCC,EAbD,KAuCXhC,EAAc,WAJlB0B,GAAQ,GACRJ,KASIW,EAAU,SAACC,GACXA,EACFC,IAAMC,IAAIvB,EAAIC,EAAJ,aAAiBG,GAAO,cAAxB,gBAA+CiB,IAC1DG,MAAK,SAAAC,GACAA,IACFrC,QAAQC,IAAI,WAAYoC,EAAIC,MAC5BnB,EAAQkB,EAAIC,KAAKC,QACjBZ,EAAWU,EAAIC,KAAKE,kBAKxBN,IAAMC,IAAIvB,EAAIC,EAAJ,aAAiBG,GAAjBJ,sBACTwB,MAAK,SAAAC,GACAA,IACFrC,QAAQC,IAAI,WAAYoC,EAAIC,MAC5BnB,EAAQkB,EAAIC,KAAKC,QACjBZ,EAAWU,EAAIC,KAAKE,cACpBT,EAAa,QAebU,EAAU,SAACC,EAAGC,GAClBD,EAAEE,iBACF5C,QAAQC,IAAI0C,GACZpB,EAASoB,GACTT,IAAMC,IAAIvB,EAAIC,EAAJ,aAAiB8B,IAC1BP,MAAK,SAAAC,GACAA,IACFrC,QAAQC,IAAIoC,EAAIC,MAChBjB,EAAgBgB,EAAIC,UAxDxBb,GAAQ,IAgEVoB,qBAAU,YA7EO,WACf,GAAInB,EAAU,GAAK,EAAnB,CACE,IAAMoB,EAAQC,SAAUrB,EAAU,GAAI,GACtCG,EAAYiB,OAFd,CAKE,IAAMA,EAAQC,SAASrB,EAAU,IACjCG,EAAYiB,IAuEdE,MAMF,IAHA,IAAMF,EAAQ,GAlGG,WAqGRG,GACPH,EAAMI,KAAK,uBAAGC,IAAKF,EAAGtC,QAAS,SAAA+B,GAAC,OAAIU,EAAKH,KAAKA,KADvCA,EAAI,EAAGA,GAAKrB,EAAUqB,IAAM,EAA5BA,GAIT,IAAMG,EAAO,SAACnB,GACZjC,QAAQC,IAAI,cAAegC,GAC3BF,EAAaE,GACbD,EAAQC,GACRoB,OAAOC,SAAS,EAAG,IAIrB,OACE,6BAEE,8BAEE,yBAAKpD,UAAU,aACb,2BAAOqD,QAAQ,SACf,2BAAOC,KAAK,OAAOxC,KAAK,OAAOyC,YAAY,aAAcC,SAAU,SAAAhB,GAAC,OAAIzB,EAAQyB,EAAEiB,OAAOC,UACzF,4BAAQJ,KAAK,SAAS7C,QAAS,SAAA+B,GAAC,OAnDnB,SAACA,GACpBA,EAAEE,iBACFZ,IAiD0C6B,CAAanB,KAAjD,YAKHxB,EACD,yBAAKhB,UAAU,UACZgB,EAAK4C,KAAI,SAAAC,GAAK,OACb,yBAAKZ,IAAKY,EAAMC,OAAQ9D,UAAU,SAChC,yBAAKC,IAAK4D,EAAM3D,OAAQC,IAAI,KAC5B,yBAAKH,UAAU,eACb,2BAAI6D,EAAME,QAEZ,4BAAQ/D,UAAU,mBAAmBS,QAAS,SAAA+B,GAAC,OAAID,EAAQC,EAAGqB,EAAMC,UAApE,WAGC5C,GAAiBE,IAAQyC,EAAMC,QAAWxC,EACzC,kBAAC,EAAD,CAAY1B,UAAWsB,EAAcrB,YAAaA,IAClD,yBAAKG,UAAU,4BAKrB,KAED0B,EACC,yBAAK1B,UAAU,SAGZ4B,EAAU,IAAI,EAAI,KAAO,uBAAGnB,QAAS,SAAA+B,GAAC,OAAIU,EAAKtB,EAAU,KAAKA,EAAU,GACzE,uBAAGnB,QAAS,SAAA+B,GAAC,OAAIU,EAAKtB,IAAY5B,UAAU,cAAc4B,GAC1D,uBAAGnB,QAAS,SAAA+B,GAAC,OAAIU,EAAKtB,EAAU,KAAKA,EAAU,IAEjD,OCvJOoC,MATf,WACE,OACE,yBAAKhE,UAAU,OAAf,aAEE,kBAAC,EAAD,QCHNiE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b100f342.chunk.js","sourcesContent":["import React from 'react'\n\nconst MovieModal = ({movieInfo, handleClose}) => {\n  console.log('asda', movieInfo)\n  return (\n    <div className=\"modal display-block\">\n                <section className=\"modal-main\">\n                  \n                  <div className=\"modal-body\">\n                    <div className=\"modal-img\">\n                      <img src={movieInfo.Poster} alt=\"Poster\"/>\n                    </div>\n                    <div className=\"modal-info\">\n                      <p><b>Actors:</b> {movieInfo.Actors}</p>\n                      <p><b>Genre:</b> {movieInfo.Genre}</p>\n                      <p><b>Director:</b> {movieInfo.Director}</p>\n                      <p><b>Released:</b> {movieInfo.Released}</p>\n                      <p><b>Plot:</b> {movieInfo.Plot}</p>\n                    </div>\n                    \n                  </div>\n                  <button className=\"modal-closebtn\" onClick={handleClose}>Close</button>\n                </section>\n              </div>\n  )\n}\n\nexport default MovieModal\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\n//component\nimport MovieModal from './MovieModal'\n\n//api\nconst api = 'http://www.omdbapi.com/?'\n//api key\nconst apiKey = 'apikey=18eaeb4f'\n\nconst Main = () => {\n  const [name, setName] = useState('')\n  const [list, setList] = useState([])\n  const [movieDetails, setMovieDetails] = useState()\n  const [selID, setSelID] = useState('')\n\n  const [show, setShow] = useState(false)\n\n  //number of pages\n  const [results, setResults] = useState() //totalResults\n  const [pagesNum, setPagesNum] = useState() \n  const [pags, setPags] = useState() //paginas\n  const [selPage, setSelPage] = useState('')\n  const [actualPag, setActualPag] = useState()\n  \n  //pagination stuff\n\n  const getPages = () => {\n    if (results % 10 > 0 ) {\n      const pages = parseInt((results / 10)+1)\n      setPagesNum(pages)\n      return\n    }\n      const pages = parseInt(results / 10)\n      setPagesNum(pages)\n  }\n\n  //modal config\n\n  const showModal = () => {\n    setShow(true)\n  }\n\n  const hideModal = () => {\n    \n    setShow(false)\n    setMovieDetails()\n  }\n\n  const handleClose = () => {\n    hideModal()\n  }\n\n  //get response from API\n\n  const getInfo = (page) => {\n    if (page) {\n      axios.get(api+apiKey+`&s=${name}`+\"&type=movie\"+`&page=${page}`)\n    .then(res => {\n      if (res) {\n        console.log('api data', res.data)\n        setList(res.data.Search)\n        setResults(res.data.totalResults)\n      }\n    })\n    return\n    }\n    axios.get(api+apiKey+`&s=${name}`+\"&type=movie\"+\"&page=1\")\n    .then(res => {\n      if (res) {\n        console.log('api data', res.data)\n        setList(res.data.Search)\n        setResults(res.data.totalResults)\n        setActualPag(1)\n      }\n    })\n  }\n\n  //submit the title entered\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    getInfo()\n  }\n\n\n  //get the details from movie\n\n  const details = (e, id) => {\n    e.preventDefault()\n    console.log(id)\n    setSelID(id)\n    axios.get(api+apiKey+`&i=${id}`)\n    .then(res => {\n      if (res) {\n        console.log(res.data)\n        setMovieDetails(res.data)\n      }\n    })\n    showModal()\n  }\n\n\n  //getpageseffect\n  useEffect(() => {\n    getPages()\n  })\n\n  const pages = [];\n  \n\n  for (let i = 1; i <= pagesNum; i++) {\n    pages.push(<p key={i} onClick={e => goTo(i)}>{i}</p>)\n  }\n\n  const goTo = (page) => {\n    console.log('page number', page)\n    setActualPag(page)\n    getInfo(page)\n    window.scrollTo(0, 0)\n  }\n\n    \n  return (\n    <div>\n   \n      <form>\n        \n        <div className=\"searchBar\">\n          <label htmlFor=\"name\"></label>\n          <input type=\"text\" name=\"name\" placeholder=\"movie name\"  onChange={e => setName(e.target.value)}/>\n          <button type=\"submit\" onClick={e => handleSubmit(e)}>Search</button>\n        </div>\n        \n      </form>\n\n      {list ? \n      <div className=\"movies\">\n        {list.map(movie => (\n          <div key={movie.imdbID} className=\"movie\">\n            <img src={movie.Poster} alt=\"\"/>\n            <div className=\"movie-title\">\n              <p>{movie.Title}</p>\n            </div>\n            <button className=\"movie-detailsBtn\" onClick={e => details(e, movie.imdbID)}>Details</button>\n            \n            {/* modal */}\n            {movieDetails && (selID===movie.imdbID) && show ? \n              <MovieModal movieInfo={movieDetails} handleClose={handleClose}/> : \n              <div className=\"modal display-none\"></div>\n            }\n\n          </div>))}\n      </div> \n      : null}\n\n      {pagesNum ? \n        <div className=\"pages\">\n          {/* {pages} */} \n          {/* if prev page is 0 it wont show */}\n          {actualPag-1===0 ? null : <b onClick={e => goTo(actualPag-1)}>{actualPag-1}</b>} \n          <b onClick={e => goTo(actualPag)} className=\"actualPage\">{actualPag}</b>\n          <b onClick={e => goTo(actualPag+1)}>{actualPag+1}</b>\n        </div>\n      : null}\n\n      \n    </div>\n  )\n}\n\nexport default Main\n","import React from 'react';\nimport './App.css'\n//components\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      REACT OMDB\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}